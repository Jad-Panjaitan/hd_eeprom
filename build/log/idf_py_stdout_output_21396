[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\abelm\Documents\School\spi_readexample\hd_eeprom\build\bootloader\esp-idf\esptool_py && C:\Users\abelm\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/abelm/esp/v5.1.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/abelm/Documents/School/spi_readexample/hd_eeprom/build/bootloader/bootloader.bin"
Bootloader binary size 0x51c0 bytes. 0x2e40 bytes (36%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/spi_eeprom_main.c.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable spi_eeprom.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/abelm/Documents/School/spi_readexample/hd_eeprom/build/spi_eeprom.bin
[7/7] cmd.exe /C "cd /D C:\Users\abelm\Documents\School\spi_readexample\hd_eeprom\build\esp-idf\esptool_py && C:\Users\abelm\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/abelm/esp/v5.1.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/abelm/Documents/School/spi_readexample/hd_eeprom/build/partition_table/partition-table.bin C:/Users/abelm/Documents/School/spi_readexample/hd_eeprom/build/spi_eeprom.bin"
spi_eeprom.bin binary size 0x39600 bytes. Smallest app partition is 0x100000 bytes. 0xc6a00 bytes (78%) free.
